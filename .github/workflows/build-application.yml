name: ⚙️ Build Application

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches:
      - main
      - feature/*


jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Test
      run: dotnet test --no-restore --verbosity normal

  build-docker-images:
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    strategy:
      matrix:
        service:
          - name: storage-api
            dockerfile: ./src/DynamicConfig.Storage.Api/Dockerfile
            image: ghcr.io/asizikov/dynamic-config-storage-api
          - name: management-web
            dockerfile: ./src/DynamicConfig.Management.Web/Dockerfile
            image: ghcr.io/asizikov/dynamic-config-management-web
          - name: database-primer
            dockerfile: ./src/clients/DatabasePrimer.Service/Dockerfile
            image: ghcr.io/asizikov/dynamic-config-database-primer

    steps:
    - uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Docker Login to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Prepare env for ${{ matrix.service.name }}
      id: prep
      run: |
        DOCKER_IMAGE=${{ matrix.service.image }}
        VERSION=${GITHUB_SHA}
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        elif [[ $GITHUB_REF == refs/heads/* ]]; then
          VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
            VERSION=edge
          fi
        elif [[ $GITHUB_REF == refs/pull/* ]]; then
          VERSION=pr-${{ github.event.number }}
        fi
        TAGS="${DOCKER_IMAGE}:${VERSION}"
        TAGS="$TAGS,${DOCKER_IMAGE}:v${GITHUB_RUN_NUMBER}"
        if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          MINOR=${VERSION%.*}
          MAJOR=${MINOR%.*}
          TAGS="$TAGS,${DOCKER_IMAGE}:${MINOR},${DOCKER_IMAGE}:${MAJOR},${DOCKER_IMAGE}:latest"
        elif [ "${{ github.event_name }}" = "push" ]; then
          TAGS="$TAGS,${DOCKER_IMAGE}:sha-${GITHUB_SHA::8}"
        fi          
        echo "version=${VERSION}" >> $GITHUB_OUTPUT
        echo "tags=${TAGS}" >> $GITHUB_OUTPUT
        echo "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

    - name: Build and push Docker images
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ${{ matrix.service.dockerfile }}
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.prep.outputs.tags }}
        labels: |
          org.opencontainers.image.title=${{ github.event.repository.name }}
          org.opencontainers.image.url=${{ github.event.repository.html_url }}
          org.opencontainers.image.source=${{ github.event.repository.clone_url }}
          org.opencontainers.image.version=${{ steps.prep.outputs.version }}
          org.opencontainers.image.created=${{ steps.prep.outputs.created }}
          org.opencontainers.image.revision=${{ github.sha }}
          org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
          org.opencontainers.image.source https://github.com/${{ github.repository_owner }}/${{ github.event.repository.name }}