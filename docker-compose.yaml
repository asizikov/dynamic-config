networks: 
  public:
  internal:
services:
  dynamic-config-redis-storage:
    image: redis
    container_name: dynamic-config-redis-storage
    networks: 
      - internal
  dynamic-config-database-primer:
    build: 
      context: .
      dockerfile: src/clients/DatabasePrimer.Service/Dockerfile
    depends_on: 
      - dynamic-config-redis-storage
    networks: 
      - internal
  dynamic-config-management-web:
    build: 
      context: .
      dockerfile: src/DynamicConfig.Management.Web/Dockerfile
    image: dynamic-config-management-web
    container_name: dynamic-config-management-web
    depends_on: 
      - dynamic-config-redis-storage
    networks: 
      - internal
  dynamic-config-storage-api:
    build: 
      context: .
      dockerfile: src/DynamicConfig.Storage.Api/Dockerfile
    image: dynamic-config-storage-api
    container_name: dynamic-config-storage-api
    depends_on: 
      - dynamic-config-redis-storage
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
    networks: 
      - internal
      - public
  client-service-a:
    build:
      context: .
      dockerfile: src/clients/WorkerService.ServiceA/Dockerfile
    image: client-service-a
    container_name: client-service-a
    networks: 
      - public